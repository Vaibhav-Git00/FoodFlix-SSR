<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{{title}}</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link rel="stylesheet" href="/styles.css">
  <style>
    .ingredient-list {
      list-style-type: none;
      padding-left: 0;
    }
    .ingredient-list li {
      padding: 8px 0;
      border-bottom: 1px dashed #ddd;
    }
    .ingredient-list li:last-child {
      border-bottom: none;
    }
    .ingredient-list li::before {
      content: "â€¢";
      color: #fd7e14;
      font-weight: bold;
      display: inline-block;
      width: 1em;
      margin-left: -1em;
    }
    .recipe-info {
      background-color: #f8f9fa;
      border-radius: 10px;
      padding: 15px;
      margin-bottom: 20px;
    }
    .recipe-info i {
      width: 25px;
      text-align: center;
      color: #fd7e14;
    }
    .star-rating {
      color: #ffc107;
      font-size: 1.2rem;
    }
  </style>
</head>
<body>
  {{> navbar}}
  <div class="container mt-4">
    <div class="row">
      <div class="col-md-8 offset-md-2">
        <div class="card mb-4">
          <img src="{{foodBlog.image}}" class="card-img-top" alt="Food Blog Image">
          <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-3">
              <h1 class="card-title mb-0">{{foodBlog.title}}</h1>
              <div>
                <span class="badge bg-info me-2">{{foodBlog.category}}</span>
                <span class="badge bg-primary">{{foodBlog.cuisine}}</span>
              </div>
            </div>
            
            <p class="text-muted">By {{foodBlog.author}} on {{formatDate foodBlog.date}}</p>
            
            <div class="mb-3">
              {{#if foodBlog.tags.length}}
                {{#each foodBlog.tags}}
                  <span class="badge bg-secondary me-1">{{this}}</span>
                {{/each}}
              {{/if}}
            </div>
            
            {{#if (eq foodBlog.category "Recipes")}}
              <div class="recipe-info">
                <div class="row">
                  <div class="col-md-4">
                    <p><i class="fas fa-clock"></i> Prep time: {{foodBlog.preparationTime}} mins</p>
                  </div>
                  <div class="col-md-4">
                    <p><i class="fas fa-utensils"></i> Difficulty: {{foodBlog.difficulty}}</p>
                  </div>
                  <div class="col-md-4">
                    <p>
                      <i class="fas fa-star"></i> Rating: 
                      <span class="star-rating">
                        {{#if averageRating}}
                          {{#times (floor averageRating)}}
                            <i class="fas fa-star"></i>
                          {{/times}}
                          {{#if (decimal averageRating)}}
                            <i class="fas fa-star-half-alt"></i>
                          {{/if}}
                          {{#times (subtract 5 (ceiling averageRating))}}
                            <i class="far fa-star"></i>
                          {{/times}}
                          ({{formatNumber averageRating 1}})
                        {{else}}
                          No ratings yet
                        {{/if}}
                      </span>
                    </p>
                  </div>
                </div>
              </div>
              
              {{#if foodBlog.ingredients.length}}
                <div class="row mb-4">
                  <div class="col-md-6">
                    <h4>Ingredients</h4>
                    <ul class="ingredient-list">
                      {{#each foodBlog.ingredients}}
                        <li><i class="fas fa-check-circle text-success me-2"></i> {{this}}</li>
                      {{/each}}
                    </ul>
                  </div>
                  <div class="col-md-6">
                    <h4>Instructions</h4>
                    <p class="card-text">{{foodBlog.content}}</p>
                  </div>
                </div>
              {{else}}
                <p class="card-text">{{foodBlog.content}}</p>
              {{/if}}
            {{else}}
              <p class="card-text">{{foodBlog.content}}</p>
            {{/if}}
            
            <div class="d-flex justify-content-between align-items-center mb-4">
              <div>
                <form action="/foodblogs/like/{{foodBlog._id}}" method="POST" class="d-inline" id="likeForm">
                  <button type="submit" class="btn btn-outline-danger">
                    <i class="fas fa-heart"></i> <span id="likeCount">{{likesCount}}</span> Likes
                  </button>
                </form>
                <span class="ms-3">
                  <i class="fas fa-comment text-primary"></i> <span id="commentCount">{{comments.length}}</span> Comments
                </span>
                <span class="ms-3">
                  <i class="fas fa-eye text-info"></i> {{foodBlog.views}} Views
                </span>
              </div>
              <div>
                <a href="/foodblogs/edit/{{foodBlog._id}}" class="btn btn-warning">Edit</a>
                <a href="/foodblogs/delete/{{foodBlog._id}}" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this food blog?')">Delete</a>
              </div>
            </div>
            
            <hr>
            
            <h3 id="commentsHeading">Comments ({{comments.length}})</h3>
            
            <form action="/foodblogs/comment/{{foodBlog._id}}" method="POST" class="mb-4" id="commentForm">
              <div class="mb-3">
                <label for="author" class="form-label">Your Name</label>
                <input type="text" class="form-control" id="author" name="author" required>
              </div>
              <div class="mb-3">
                <label for="content" class="form-label">Your Comment</label>
                <textarea class="form-control" id="content" name="content" rows="3" required></textarea>
              </div>
              
              {{#if (eq foodBlog.category "Recipes")}}
                <div class="mb-3">
                  <label for="rating" class="form-label">Rating</label>
                  <div class="rating-input">
                    <div class="star-rating">
                      <input type="radio" id="star5" name="rating" value="5" /><label for="star5"></label>
                      <input type="radio" id="star4" name="rating" value="4" /><label for="star4"></label>
                      <input type="radio" id="star3" name="rating" value="3" /><label for="star3"></label>
                      <input type="radio" id="star2" name="rating" value="2" /><label for="star2"></label>
                      <input type="radio" id="star1" name="rating" value="1" /><label for="star1"></label>
                    </div>
                  </div>
                </div>
              {{/if}}
              
              <button type="submit" class="btn btn-primary">Submit Comment</button>
            </form>
            
            <div class="comments-section">
              {{#if comments.length}}
                {{#each comments}}
                  <div class="card mb-3">
                    <div class="card-body">
                      <div class="d-flex justify-content-between">
                        <h5 class="card-title">{{this.author}}</h5>
                        <small class="text-muted">{{formatDate this.createdAt}}</small>
                      </div>
                      
                      {{#if this.rating}}
                        <div class="mb-2 star-rating">
                          {{#times this.rating}}
                            <i class="fas fa-star"></i>
                          {{/times}}
                          {{#times (subtract 5 this.rating)}}
                            <i class="far fa-star"></i>
                          {{/times}}
                        </div>
                      {{/if}}
                      
                      <p class="card-text">{{this.content}}</p>
                      <a href="/foodblogs/comment/delete/{{this._id}}" class="btn btn-sm btn-outline-danger" onclick="return confirm('Delete this comment?')">
                        <i class="fas fa-trash"></i> Delete
                      </a>
                    </div>
                  </div>
                {{/each}}
              {{else}}
                <p class="text-muted">No comments yet. Be the first to comment!</p>
              {{/if}}
            </div>
          </div>
        </div>
        
        {{#if relatedByCategory.length}}
        <div class="card mb-4">
          <div class="card-header bg-light">
            <h3 class="mb-0">Related {{foodBlog.category}}</h3>
          </div>
          <div class="card-body">
            <div class="row">
              {{#each relatedByCategory}}
                <div class="col-md-4 mb-3">
                  <div class="card h-100">
                    <img src="{{this.image}}" class="card-img-top" alt="Food Blog Image" style="height: 150px; object-fit: cover;">
                    <div class="card-body">
                      <h5 class="card-title">{{this.title}}</h5>
                      <p class="card-text small">{{truncate this.content 100}}</p>
                      <a href="/foodblogs/view/{{this._id}}" class="btn btn-sm btn-primary">Read More</a>
                    </div>
                  </div>
                </div>
              {{/each}}
            </div>
          </div>
        </div>
        {{/if}}
        
        {{#if relatedByCuisine.length}}
        <div class="card mb-4">
          <div class="card-header bg-light">
            <h3 class="mb-0">More {{foodBlog.cuisine}} Recipes</h3>
          </div>
          <div class="card-body">
            <div class="row">
              {{#each relatedByCuisine}}
                <div class="col-md-4 mb-3">
                  <div class="card h-100">
                    <img src="{{this.image}}" class="card-img-top" alt="Food Blog Image" style="height: 150px; object-fit: cover;">
                    <div class="card-body">
                      <h5 class="card-title">{{this.title}}</h5>
                      <p class="card-text small">{{truncate this.content 100}}</p>
                      <a href="/foodblogs/view/{{this._id}}" class="btn btn-sm btn-primary">Read More</a>
                    </div>
                  </div>
                </div>
              {{/each}}
            </div>
          </div>
        </div>
        {{/if}}
        
        <div class="text-center mb-4">
          <a href="/foodblogs" class="btn btn-secondary">Back to Food Blogs</a>
        </div>
      </div>
    </div>
  </div>
  
  {{> footer}}
  
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Handle like form submission with AJAX
    document.getElementById('likeForm').addEventListener('submit', function(e) {
      e.preventDefault();
      
      fetch(this.action, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({})
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        if (data.success) {
          // Update like count
          document.getElementById('likeCount').textContent = data.likesCount;
          
          // Add visual feedback
          const btn = this.querySelector('button');
          btn.classList.add('btn-danger');
          btn.classList.remove('btn-outline-danger');
          
          // Reset button after a short delay
          setTimeout(() => {
            btn.classList.add('btn-outline-danger');
            btn.classList.remove('btn-danger');
          }, 1000);
        } else {
          console.error('Error liking food blog:', data.message);
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Failed to like the food blog. Please try again.');
      });
    });
    
    // Handle comment form submission with AJAX
    document.getElementById('commentForm').addEventListener('submit', function(e) {
      e.preventDefault();
      
      const formData = new FormData(this);
      const commentData = {
        content: formData.get('content'),
        author: formData.get('author')
      };
      
      // Add rating if present
      const ratingInput = formData.get('rating');
      if (ratingInput) {
        commentData.rating = parseInt(ratingInput);
      }
      
      // Validate form data
      if (!commentData.content || !commentData.author) {
        alert('Please fill in all required fields');
        return;
      }
      
      fetch(this.action, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify(commentData)
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        if (data.success) {
          // Update comment count
          document.getElementById('commentCount').textContent = data.commentsCount;
          
          // Update comments heading
          const commentsHeading = document.getElementById('commentsHeading');
          if (commentsHeading) {
            commentsHeading.textContent = `Comments (${data.commentsCount})`;
          }
          
          // Add new comment to the list
          const commentsSection = document.querySelector('.comments-section');
          
          // Create new comment element
          const newComment = document.createElement('div');
          newComment.className = 'card mb-3';
          
          let ratingStars = '';
          if (commentData.rating) {
            ratingStars = `
              <div class="mb-2 star-rating">
                ${Array(commentData.rating).fill('<i class="fas fa-star"></i>').join('')}
                ${Array(5 - commentData.rating).fill('<i class="far fa-star"></i>').join('')}
              </div>
            `;
          }
          
          newComment.innerHTML = `
            <div class="card-body">
              <div class="d-flex justify-content-between">
                <h5 class="card-title">${data.comment.author}</h5>
                <small class="text-muted">Just now</small>
              </div>
              ${ratingStars}
              <p class="card-text">${data.comment.content}</p>
              <a href="/foodblogs/comment/delete/${data.comment._id}" class="btn btn-sm btn-outline-danger" onclick="return confirm('Delete this comment?')">
                <i class="fas fa-trash"></i> Delete
              </a>
            </div>
          `;
          
          // Add to the beginning of the comments section
          if (commentsSection.querySelector('p.text-muted')) {
            // Remove "No comments yet" message if it exists
            commentsSection.innerHTML = '';
          }
          
          commentsSection.insertBefore(newComment, commentsSection.firstChild);
          
          // Clear the form
          this.reset();
          
          // Update average rating if provided
          if (data.averageRating) {
            const ratingElements = document.querySelectorAll('.recipe-info .star-rating');
            if (ratingElements.length > 0) {
              const fullStars = Math.floor(data.averageRating);
              const hasHalfStar = data.averageRating % 1 >= 0.5;
              const emptyStars = 5 - (fullStars + (hasHalfStar ? 1 : 0));
              
              let starsHtml = '';
              for (let i = 0; i < fullStars; i++) {
                starsHtml += '<i class="fas fa-star"></i>';
              }
              if (hasHalfStar) {
                starsHtml += '<i class="fas fa-star-half-alt"></i>';
              }
              for (let i = 0; i < emptyStars; i++) {
                starsHtml += '<i class="far fa-star"></i>';
              }
              
              starsHtml += ` (${data.averageRating.toFixed(1)})`;
              
              ratingElements[0].innerHTML = starsHtml;
            }
          }
        } else {
          console.error('Error adding comment:', data.message);
          alert('Failed to add comment. Please try again.');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Failed to add comment. Please try again.');
      });
    });
    
    // Star rating functionality
    const starLabels = document.querySelectorAll('.rating-input label');
    const starInputs = document.querySelectorAll('.rating-input input');
    
    starLabels.forEach((label, index) => {
      label.innerHTML = '<i class="far fa-star"></i>';
      
      label.addEventListener('mouseover', () => {
        for (let i = 0; i <= index; i++) {
          starLabels[i].innerHTML = '<i class="fas fa-star"></i>';
        }
        for (let i = index + 1; i < starLabels.length; i++) {
          starLabels[i].innerHTML = '<i class="far fa-star"></i>';
        }
      });
      
      label.addEventListener('click', () => {
        starInputs[index].checked = true;
      });
    });
    
    document.querySelector('.rating-input').addEventListener('mouseout', () => {
      const checkedIndex = Array.from(starInputs).findIndex(input => input.checked);
      
      if (checkedIndex >= 0) {
        for (let i = 0; i <= checkedIndex; i++) {
          starLabels[i].innerHTML = '<i class="fas fa-star"></i>';
        }
        for (let i = checkedIndex + 1; i < starLabels.length; i++) {
          starLabels[i].innerHTML = '<i class="far fa-star"></i>';
        }
      } else {
        starLabels.forEach(label => {
          label.innerHTML = '<i class="far fa-star"></i>';
        });
      }
    });
  </script>
</body>
</html>
